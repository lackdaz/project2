<aside class="left-aside">
    <ul>
        <li>
            <button type="button" class="aside-button" id="allOrdersButton">Orders</button>
        </li>
        <li>
            <button type="button" class="aside-button" id="serviceRequestsButton">Service Requests</button>
        </li>
        <li>
            <button type="button" class="aside-button" id="completedOrdersButton">Completed</button>
        </li>
    </ul>
    <h6>Sort</h6>
    <h6>Filter</h6>
</aside>

<main>
    <section class="allOrders">
        <h3>All Orders</h3>
        <% orders.filter((order) => { return order.completed === false}).forEach((order) => { %>
            <article class="order-item">
                <div class="order-date">
                    <%= formatDate(order.orderedAt)[1] %>
                </div>
                <div class="order-customer">
                    <%= order.customer.name %>
                </div>
                <div class="order-name">
                    <%= order.menuItem.name %>
                </div>
                <div class="order-button">
                    <button type="button" class="done-button" value="<%- order.id %>">Done</button>
                </div>
            </article>
        <% }) %>
    </section>

    <section class="serviceRequests">
        <h3>Service Requests</h3>
    </section>

    <section class="completedOrders">
        <h3>Completed Orders</h3>
        <% orders.filter((order) => { return order.completed === true}).sort((a,b) => {return b.completedAt - a.completedAt}).forEach((order) => { %>
            <article class="order-item">
                <div class="order-date">
                    <% var completedDate = order.completedAt ? formatDate(order.completedAt)[1] : "" %>
                    <%= completedDate %>
                </div>
                <div class="order-customer">
                    <%= order.customer.name %>
                </div>
                <div class="order-item">
                    <%= order.menuItem.name %>
                </div>
            </article>
        <% }) %>
    </section>
</main>

<script src="/socket.io/socket.io.js"></script>
<script>
    // connect to the business' room
    var socket = io.connect()
    var room = "<%= chat %>"
    socket.on('connect', function() {
        socket.emit('join', room)
        console.log('joining ' + room)
    })
    // add the new menu order to the orders section
    socket.on('order', function(data) {
        console.log('receiving new order')
        var newArticle = document.createElement('article')
        newArticle.innerHTML = "<article class='order-item'><div class='order-date'>" + data.date + "</div><div class='order-customer'>" + data.customer + "</div><div class='order-name'>" + data.menuItem + "</div><div class='order-item'><button type='button' class='done-button' value=" + data.orderId + ">DONE</button></div></article>"
        document.querySelector('.allOrders').appendChild(newArticle)
    })
    // add the new service order to the service section
    socket.on('serviceRequest', function(data) {
        console.log('receiving new service request')
        var newArticle = document.createElement('article')
        newArticle.innerHTML = "<article class='order-item'><div class='order-date'>" + data.date + "</div><div class='order-customer'>" + data.customer + "</div><div class='order-name'>" + data.serviceItem + "</div><div class='order-item'><button type='button' class='done-button'>DONE</button></div></article>"
        document.querySelector('.serviceRequests').appendChild(newArticle)
    })
    // move the completed order to the completed orders table and change the status of the order to completed
    document.querySelector('.allOrders').addEventListener('click', function(event) {
        function send(orderId) {
            console.log('submitting remove order')
            socket.emit('remove', orderId)
        }
        var clickedElement = event.target
        if (clickedElement.className === 'done-button') {
            var orderId = clickedElement.value
            // remove the DONE button before moving it to completed
            var article = clickedElement.parentNode.parentNode
            console.log(article)
            clickedElement.parentNode.parentNode.removeChild(clickedElement.parentNode)
            // change completed date !!!!
            var completedOrders = document.querySelector('.completedOrders')
            completedOrders.insertBefore(article, completedOrders.childNodes[2])
            send(orderId)
        }
    })
    // remove the completed service order
    document.querySelector('.serviceRequests').addEventListener('click', function(event) {
        var clickedElement = event.target
        if (clickedElement.className === 'done-button') {
            clickedElement.parentNode.parentNode.parentNode.parentNode.removeChild(clickedElement.parentNode.parentNode.parentNode)
        }
    })

    // show and hide the sections
    var orderButtons = [document.getElementById('allOrdersButton'), document.getElementById('serviceRequestsButton'), document.getElementById('completedOrdersButton')]
    var orderDivs = [document.querySelector('.allOrders'), document.querySelector('.serviceRequests'), document.querySelector('.completedOrders')]
    orderButtons.forEach((button, index) => {
        button.addEventListener('click', () => {
            orderDivs.forEach((div) => {
                div.style.display = 'none'
            })
            orderDivs[index].style.display = 'block'
        })
    })
    orderDivs.forEach((div) => {
        div.style.display = 'none'
    })
    document.querySelector('.allOrders').style.display = 'block'
</script>
